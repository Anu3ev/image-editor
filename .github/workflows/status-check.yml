name: CI Status Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  statuses: write
  issues: write
  pull-requests: write

jobs:
  status-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests with status check
        id: test-run
        run: |
          echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Å—Ç–∞—Ç—É—Å-—á–µ–∫–∞..."
          if npm run test:ci; then
            echo "test_status=success" >> $GITHUB_OUTPUT
            echo "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!"
          else
            echo "test_status=failure" >> $GITHUB_OUTPUT
            echo "‚ùå –¢–µ—Å—Ç—ã —É–ø–∞–ª–∏!"
            exit 1
          fi
          
      - name: Update commit status
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const testStatus = '${{ steps.test-run.outputs.test_status }}';
            const state = testStatus === 'success' ? 'success' : 'failure';
            const description = testStatus === 'success' 
              ? '–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ' 
              : '–¢–µ—Å—Ç—ã —É–ø–∞–ª–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: state,
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: description,
              context: 'tests/status-check'
            });
